# -*- coding: utf-8 -*-
# Generated by Django 1.9.7 on 2016-06-30 18:21
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('dynadb', '0013_auto_20160630_1210'),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='dyndbefficacy',
            options={'managed': True},
        ),
        migrations.AlterModelOptions(
            name='dyndbreferences',
            options={'managed': True},
        ),
        migrations.AddField(
            model_name='dyndbcomplexcompound',
            name='id_complex_exp',
            field=models.ForeignKey( null=True, db_column='id_complex_exp', on_delete=django.db.models.deletion.DO_NOTHING, to='dynadb.DyndbComplexExp'),
        ),
        migrations.AddField(
            model_name='dyndbcomplexcompound',
            name='id_compound',
            field=models.ForeignKey( null=True, db_column='id_compound',on_delete=django.db.models.deletion.DO_NOTHING, to='dynadb.DyndbCompound'),#
        ),
        migrations.AddField(
            model_name='dyndbexpinteractiondata',
            name='id_complex_exp',
            field=models.ForeignKey(db_column='id_complex_exp', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='dynadb.DyndbComplexExp'),
        ),
        migrations.AddField(
            model_name='dyndbexpinteractiondata',
            name='ligand1',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='DyndbExpInteractionData_ligand1_fky', to='dynadb.DyndbCompound'), #db_column='ligand1', 
        ),
        migrations.AddField(
            model_name='dyndbexpinteractiondata',
            name='ligand2',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='DyndbExpInteractionData_ligand2_fky', to='dynadb.DyndbCompound'),# db_column='ligand2', 
        ),
        migrations.AddField(
            model_name='dyndbexpinteractiondata',
            name='protein1',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='DyndbExpInteractionData_protein1_fky', to='dynadb.DyndbProtein'),  #db_column='protein1', 
        ),
        migrations.AddField(
            model_name='dyndbexpinteractiondata',
            name='protein2',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='DyndbExpInteractionData_protein2_fky', to='dynadb.DyndbProtein'), #db_column='protein2', 
        ),
        migrations.AddField(
            model_name='dyndbexpproteindata',
            name='id_protein',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='dynadb.DyndbProtein'), #db_column='id_protein', 
        ),
        migrations.AddField(
            model_name='dyndbfilesdynamics',
            name='id_dynamics',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='dynadb.DyndbDynamics'),#db_column='id_dynamics', 
        ),
        migrations.AddField(
            model_name='dyndbfilesdynamics',
            name='id_files',
            field=models.ForeignKey( null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='dynadb.DyndbFiles'),#dyndb_complex_compound_type
        ),
        migrations.AddField(
            model_name='dyndbfilesmolecule',
            name='id_files',
            field=models.OneToOneField( null=True,db_column='id_files', on_delete=django.db.models.deletion.DO_NOTHING, to='dynadb.DyndbFiles'),#db_column='id_files',
        ),
        migrations.AddField(
            model_name='dyndbfilesmolecule',
            name='id_molecule',
            field=models.ForeignKey( null=True, db_column='id_molecule',on_delete=django.db.models.deletion.DO_NOTHING, to='dynadb.DyndbMolecule'),#db_column='id_molecule',
        ),
        migrations.AddField(
            model_name='dyndbmodel',
            name='id_complex_molecule',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='dynadb.DyndbComplexMolecule'),#db_column='id_complex_molecule', 
        ),
        migrations.AddField(
            model_name='dyndbmodel',
            name='id_protein',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='dynadb.DyndbProtein'), #db_column='id_protein', 
        ),
        migrations.AddField(
            model_name='dyndbmodel',
            name='id_structure_model',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='dynadb.StructureModel'),
        ),
        migrations.AddField(
            model_name='dyndbmodel',
            name='template_id_model',
            field=models.ForeignKey(blank=True,  null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='dynadb.DyndbModel'),
        ),
#       migrations.AlterField(
#           model_name='dyndbcomplexcompound',
#           name='type',
#           field=models.SmallIntegerField(choices=[(0,'Orthosteric ligand'),(1,'Allosteric ligand'),(2,'Crystallographic waters'),(3,'Other')], default=0, null=True ),
#       ),
        migrations.AlterField(
            model_name='dyndbdynamicscomponents',
            name='id_dynamics',
            field=models.ForeignKey(db_column='id_dynamics', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='dynadb.DyndbDynamics'),
        ),
        migrations.AlterField(
            model_name='dyndbdynamicscomponents',
            name='id_molecule',
            field=models.ForeignKey(db_column='id_molecule', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='dynadb.DyndbMolecule'),
        ),
        migrations.AlterField(
            model_name='dyndbdynamicscomponents',
            name='type',
            field=models.SmallIntegerField(choices=((0,'Ions'),(1,'Ligand'),(2,'Membrane'),(3,'Water'),(4,'Other')), default=0),
        ),
        migrations.AlterField(
            model_name='dyndbexpinteractiondata',
            name='type',
            field=models.SmallIntegerField(choices=((0,'Functional'),(1,'Binding'),(2,'Efficacy')), default=0),
        ),
        migrations.AlterField(
            model_name='dyndbexpproteindata',
            name='type',
            field=models.SmallIntegerField(choices=[(0,'Activity'),(1,'Others')], default=0),
        ),
#       migrations.AlterField(
#           model_name='dyndbfilesdynamics',
#           name='type',
#           field=models.SmallIntegerField(choices=[(0,'Input coordinates'),(1,'input topology'),(2,'trajectory'),(3,'others')], null=True, default=0),
#       ),
#       migrations.AlterField(
#           model_name='dyndbfilesmolecule',
#           name='type',
#           field=models.SmallIntegerField(choices=[(0,'Image'),(1,'Molecule')],default=0, null=True),
#       ),
        migrations.AlterField(
            model_name='DyndbModel',
            name='type',
            field=models.SmallIntegerField(choices=((0,'Protein'),(1,'Complex')),default=0),
        ),
        migrations.AlterField(
            model_name='dyndbmodelcomponents',
            name='id_model',
            field=models.ForeignKey(db_column='id_model', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='dynadb.DyndbModel'),
        ),
        migrations.AlterField(
            model_name='dyndbmodelcomponents',
            name='id_molecule',
            field=models.ForeignKey(db_column='id_molecule', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='dynadb.DyndbMolecule'),
        ),
        migrations.AlterField(
            model_name='dyndbmodelcomponents',
            name='type',
            field=models.SmallIntegerField(choices=[(0,'Ions'),(1,'Ligand'),(2,'Membrane'),(3,'Water'),(4,'Other')], default=0),
        ),
        migrations.AlterField(
            model_name='dyndbmodeledresidues',
            name='source_type',
            field=models.SmallIntegerField(choices=[(0,'Ab-initio'),(1,'Homology'),(2,'Threading'),(3,'Other Computational Methods')], default=0),
        ),
        migrations.AlterUniqueTogether(
            name='dyndbcomplexcompound',
            unique_together=set([('id_complex_exp', 'id_compound')]),
        ),


    ]
