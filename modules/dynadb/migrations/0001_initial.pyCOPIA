# -*- coding: utf-8 -*-
# Generated by Django 1.9.2 on 2016-03-19 12:54
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=80, unique=True)),
            ],
            options={
                'managed': False,
                'db_table': 'auth_group',
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'managed': False,
                'db_table': 'auth_group_permissions',
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'managed': False,
                'db_table': 'auth_permission',
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.BooleanField()),
                ('username', models.CharField(max_length=30, unique=True)),
                ('first_name', models.CharField(max_length=30)),
                ('last_name', models.CharField(max_length=30)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.BooleanField()),
                ('is_active', models.BooleanField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'managed': False,
                'db_table': 'auth_user',
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'managed': False,
                'db_table': 'auth_user_groups',
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'managed': False,
                'db_table': 'auth_user_user_permissions',
            },
        ),
        migrations.CreateModel(
            name='Construct',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deletions', models.TextField(blank=True, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'construct',
            },
        ),
        migrations.CreateModel(
            name='ConstructAuxProtein',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('uniprot_id', models.CharField(max_length=20)),
                ('sequence', models.TextField(blank=True, null=True)),
                ('deletions', models.TextField(blank=True, null=True)),
                ('position', models.TextField(blank=True, null=True)),
                ('remarks', models.TextField(blank=True, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'construct_aux_protein',
            },
        ),
        migrations.CreateModel(
            name='ConstructAuxProteinType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(blank=True, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'construct_aux_protein_type',
            },
        ),
        migrations.CreateModel(
            name='ConstructChemical',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=200, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'construct_chemical',
            },
        ),
        migrations.CreateModel(
            name='ConstructChemicalConc',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('concentration', models.TextField(blank=True, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'construct_chemical_conc',
            },
        ),
        migrations.CreateModel(
            name='ConstructChemicalList',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'managed': False,
                'db_table': 'construct_chemical_list',
            },
        ),
        migrations.CreateModel(
            name='ConstructChemicalListChemicals',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'managed': False,
                'db_table': 'construct_chemical_list_chemicals',
            },
        ),
        migrations.CreateModel(
            name='ConstructChemicalModification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField()),
            ],
            options={
                'managed': False,
                'db_table': 'construct_chemical_modification',
            },
        ),
        migrations.CreateModel(
            name='ConstructChemicalType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'construct_chemical_type',
            },
        ),
        migrations.CreateModel(
            name='ConstructCrystallization',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('method', models.TextField(blank=True, null=True)),
                ('settings', models.TextField(blank=True, null=True)),
                ('remarks', models.TextField(blank=True, null=True)),
                ('protein_conc', models.CharField(max_length=20)),
                ('aqueous_solution_lipid_ratio', models.CharField(blank=True, max_length=20, null=True)),
                ('lcp_bolus_volume', models.CharField(blank=True, max_length=20, null=True)),
                ('precipitant_solution_volume', models.CharField(blank=True, max_length=20, null=True)),
                ('temp', models.CharField(blank=True, max_length=5, null=True)),
                ('ph', models.TextField(blank=True, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'construct_crystallization',
            },
        ),
        migrations.CreateModel(
            name='ConstructCrystallizationMethodTypes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'construct_crystallization_method_types',
            },
        ),
        migrations.CreateModel(
            name='ConstructExpression',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('remarks', models.TextField(blank=True, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'construct_expression',
            },
        ),
        migrations.CreateModel(
            name='ConstructExpressionSystem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('expression_method', models.CharField(max_length=100)),
                ('host_cell_type', models.CharField(max_length=100)),
                ('host_cell', models.CharField(max_length=100)),
            ],
            options={
                'managed': False,
                'db_table': 'construct_expression_system',
            },
        ),
        migrations.CreateModel(
            name='ConstructLigandConcOfCrystallization',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ligand_conc', models.TextField(blank=True, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'construct_ligand_conc_of_crystallization',
            },
        ),
        migrations.CreateModel(
            name='ConstructPurification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('remarks', models.TextField(blank=True, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'construct_purification',
            },
        ),
        migrations.CreateModel(
            name='ConstructPurificationStep',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'construct_purification_step',
            },
        ),
        migrations.CreateModel(
            name='ConstructPurificationStepType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(blank=True, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'construct_purification_step_type',
            },
        ),
        migrations.CreateModel(
            name='ConstructSolubilization',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('remarks', models.TextField(blank=True, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'construct_solubilization',
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.SmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'managed': False,
                'db_table': 'django_admin_log',
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'managed': False,
                'db_table': 'django_content_type',
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'managed': False,
                'db_table': 'django_migrations',
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'managed': False,
                'db_table': 'django_session',
            },
        ),
        migrations.CreateModel(
            name='DyndbAssayTypes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_name', models.CharField(max_length=60)),
            ],
            options={
                'managed': False,
                'db_table': 'dyndb_assay_types',
            },
        ),
        migrations.CreateModel(
            name='DyndbComplexCompound',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.TextField()),
            ],
            options={
                'managed': False,
                'db_table': 'dyndb_complex_compound',
            },
        ),
        migrations.CreateModel(
            name='DyndbComplexExp',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('update_timestamp', models.DateTimeField()),
                ('creation_timestamp', models.DateTimeField()),
                ('created_by_dbengine', models.CharField(max_length=40)),
                ('last_update_by_dbengine', models.CharField(max_length=40)),
                ('created_by', models.IntegerField(blank=True, null=True)),
                ('last_update_by', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'dyndb_complex_exp',
            },
        ),
        migrations.CreateModel(
            name='DyndbComplexMolecule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('update_timestamp', models.DateTimeField()),
                ('creation_timestamp', models.DateTimeField()),
                ('created_by_dbengine', models.CharField(max_length=40)),
                ('last_update_by_dbengine', models.CharField(max_length=40)),
                ('created_by', models.IntegerField(blank=True, null=True)),
                ('last_update_by', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'dyndb_complex_molecule',
            },
        ),
        migrations.CreateModel(
            name='DyndbComplexMoleculeMolecule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('resname', models.CharField(blank=True, max_length=4, null=True)),
                ('number', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'dyndb_complex_molecule_molecule',
            },
        ),
        migrations.CreateModel(
            name='DyndbComplexProtein',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_receptor', models.BooleanField()),
            ],
            options={
                'managed': False,
                'db_table': 'dyndb_complex_protein',
            },
        ),
        migrations.CreateModel(
            name='DyndbCompound',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=60, unique=True)),
                ('iupac_name', models.CharField(max_length=500)),
                ('pubchem_cid', models.IntegerField(blank=True, null=True, unique=True)),
                ('chembleid', models.IntegerField(blank=True, null=True, unique=True)),
                ('update_timestamp', models.DateTimeField()),
                ('creation_timestamp', models.DateTimeField()),
                ('created_by_dbengine', models.CharField(max_length=40)),
                ('last_update_by_dbengine', models.CharField(max_length=40)),
                ('created_by', models.IntegerField(blank=True, null=True)),
                ('last_update_by', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'dyndb_compound',
            },
        ),
        migrations.CreateModel(
            name='DyndbDynamics',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('software', models.CharField(blank=True, max_length=30, null=True)),
                ('sversion', models.CharField(blank=True, max_length=15, null=True)),
                ('ff', models.CharField(blank=True, max_length=20, null=True)),
                ('ffversion', models.CharField(blank=True, max_length=15, null=True)),
                ('description', models.CharField(blank=True, max_length=150, null=True)),
                ('solvent_num', models.IntegerField(blank=True, null=True)),
                ('update_timestamp', models.DateTimeField()),
                ('creation_timestamp', models.DateTimeField()),
                ('created_by_dbengine', models.CharField(max_length=40)),
                ('last_update_by_dbengine', models.CharField(max_length=40)),
                ('created_by', models.IntegerField(blank=True, null=True)),
                ('last_update_by', models.IntegerField(blank=True, null=True)),
#                ('submission_id', models.ForeignKey(blank=True, db_column='submission_id', on_delete=django.db.models.deletion.DO_NOTHING, serialize=False,null=True, to='dynadb.DyndbSubmission')),
                ('id_assay_types',models.ForeignKey(blank=True, db_column='id_assay_types', on_delete=django.db.models.deletion.DO_NOTHING, serialize=False,null=True,  to='dynadb.DyndbAssayTypes')), 
                ('id_dynamics_membrane_types',models.ForeignKey(blank=True, db_column='id_dynamics_membrane_types', on_delete=django.db.models.deletion.DO_NOTHING, serialize=False,null=True, to='dynadb.DyndbDynamicsMembraneTypes')),
                ('id_dynamics_methods', models.ForeignKey(blank=True, db_column='id_dynamics_methods', on_delete=django.db.models.deletion.DO_NOTHING, serialize=False,null=True, to='dynadb.DyndbDynamicsMethods')),
                ('id_dynamics_solvent_types', models.ForeignKey(blank=True, db_column='id_dynamics_solvent_types', on_delete=django.db.models.deletion.DO_NOTHING, serialize=False, null=True, to='dynadb.DyndbDynamicsSolventTypes')),
                ('id_model',models.ForeignKey(blank=True, db_column='id_model', null=True, to='dynadb.DyndbModel')),
            ],
            options={
                'managed': False,
                'db_table': 'dyndb_dynamics',
            },
        ),
        migrations.CreateModel(
            name='DyndbDynamicsMembraneTypes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_name', models.CharField(max_length=20)),
            ],
            options={
                'managed': False,
                'db_table': 'dyndb_dynamics_membrane_types',
            },
        ),
        migrations.CreateModel(
            name='DyndbDynamicsMethods',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_name', models.CharField(max_length=50)),
            ],
            options={
                'managed': False,
                'db_table': 'dyndb_dynamics_methods',
            },
        ),
        migrations.CreateModel(
            name='DyndbDynamicsSolventTypes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_name', models.CharField(max_length=20)),
            ],
            options={
                'managed': False,
                'db_table': 'dyndb_dynamics_solvent_types',
            },
        ),
        migrations.CreateModel(
            name='DyndbDynamicsTags',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'managed': False,
                'db_table': 'dyndb_dynamics_tags',
            },
        ),
        migrations.CreateModel(
            name='DyndbDynamicsTagsList',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=45, unique=True)),
            ],
            options={
                'managed': False,
                'db_table': 'dyndb_dynamics_tags_list',
            },
        ),
        migrations.CreateModel(
            name='DyndbExpInteractionData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.TextField()),
                ('update_timestamp', models.DateTimeField()),
                ('creation_timestamp', models.DateTimeField()),
                ('created_by_dbengine', models.CharField(max_length=40)),
                ('last_update_by_dbengine', models.CharField(max_length=40)),
                ('created_by', models.IntegerField(blank=True, null=True)),
                ('last_update_by', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'dyndb_exp_interaction_data',
            },
        ),
        migrations.CreateModel(
            name='DyndbExpProteinData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.TextField()),
                ('update_timestamp', models.DateTimeField()),
                ('creation_timestamp', models.DateTimeField()),
                ('created_by_dbengine', models.CharField(max_length=40)),
                ('last_update_by_dbengine', models.CharField(max_length=40)),
                ('created_by', models.IntegerField(blank=True, null=True)),
                ('last_update_by', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'dyndb_exp_protein_data',
            },
        ),
        migrations.CreateModel(
            name='DyndbFiles',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('filename', models.CharField(max_length=80, unique=True)),
                ('description', models.CharField(blank=True, max_length=40, null=True)),
                ('update_timestamp', models.DateTimeField()),
                ('creation_timestamp', models.DateTimeField()),
                ('created_by_dbengine', models.CharField(max_length=40)),
                ('last_update_by_dbengine', models.CharField(max_length=40)),
                ('created_by', models.IntegerField(blank=True, null=True)),
                ('last_update_by', models.IntegerField(blank=True, null=True)),
                ('filepath', models.CharField(blank=True, max_length=520, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'dyndb_files',
            },
        ),
        migrations.CreateModel(
            name='DyndbFilesDynamics',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.TextField(blank=True, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'dyndb_files_dynamics',
            },
        ),
        migrations.CreateModel(
            name='DyndbFilesModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'managed': False,
                'db_table': 'dyndb_files_model',
            },
        ),
        migrations.CreateModel(
            name='DyndbFilesMolecule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.TextField()),
            ],
            options={
                'managed': False,
                'db_table': 'dyndb_files_molecule',
            },
        ),
        migrations.CreateModel(
            name='DyndbFileTypes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_name', models.CharField(blank=True, max_length=40, null=True)),
                ('extension', models.CharField(blank=True, max_length=10, null=True)),
                ('is_coordinates', models.BooleanField(null=True)),
                ('is_topology', models.BooleanField(null=True)),
                ('is_trajectory', models.BooleanField(null=True)),
                ('is_parameter', models.BooleanField(null=True)),
                ('is_anytype', models.BooleanField(null=True)),
                ('is_image', models.BooleanField(null=True)),
                ('is_molecule', models.BooleanField(null=True)),
                ('is_model', models.BooleanField(null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'dyndb_file_types',
            },
        ),
        migrations.CreateModel(
            name='DyndbIonicComponents',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('resname', models.CharField(max_length=4)),
                ('number', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'dyndb_ionic_components',
            },
        ),
        migrations.CreateModel(
            name='DyndbMembraneComponents',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('resname', models.CharField(max_length=4)),
                ('number', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'dyndb_membrane_components',
            },
        ),
        migrations.CreateModel(
            name='DyndbModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.TextField()),
                ('source_type', models.TextField()),
                ('pdbid', models.CharField(blank=True, max_length=6, null=True)),
                ('description', models.CharField(blank=True, max_length=100, null=True)),
                ('update_timestamp', models.DateTimeField()),
                ('creation_timestamp', models.DateTimeField()),
                ('created_by_dbengine', models.CharField(max_length=40)),
                ('last_update_by_dbengine', models.CharField(max_length=40)),
                ('created_by', models.IntegerField(blank=True, null=True)),
                ('last_update_by', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'managed': True,
                'db_table': 'dyndb_model',
            },
        ),
        migrations.CreateModel(
            name='DyndbModeledResidues',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_protein', models.IntegerField(blank=True, null=True)),
                ('id_model', models.ForeignKey(to='dynadb.DyndbModel', on_delete=django.db.models.deletion.DO_NOTHING, serialize=False, db_column='id_model')),
                ('chain', models.CharField(max_length=1)),
                ('resid_from', models.SmallIntegerField()),
                ('resid_to', models.SmallIntegerField()),
                ('pdbid', models.CharField(blank=True, max_length=6, null=True)),
                ('source_type', models.SmallIntegerField()),
                ('template_id_model', models.ForeignKey(to='dynadb.DyndbModel', null=True, on_delete=django.db.models.deletion.DO_NOTHING, serialize=False, db_column='template_id_model')),
            ],
            options={
                'managed': False,
                'db_table': 'dyndb_modeled_residues',
            },
        ),
        migrations.CreateModel(
            name='DyndbMolecule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(blank=True, max_length=80, null=True)),
                ('net_charge', models.SmallIntegerField(blank=True, null=True)),
                ('inchi', models.TextField()),
                ('sinchikey', models.CharField(max_length=27)),
                ('inchikey', models.CharField(max_length=27)),
                ('inchicol', models.SmallIntegerField()),
                ('smiles', models.TextField(blank=True, null=True)),
                ('update_timestamp', models.DateTimeField(blank=True, null=True)),
                ('creation_timestamp', models.DateTimeField()),
                ('created_by_dbengine', models.CharField(max_length=40)),
                ('last_update_by_dbengine', models.CharField(max_length=40)),
                ('created_by', models.IntegerField(blank=True, null=True)),
                ('last_update_by', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'dyndb_molecule',
            },
        ),
        migrations.CreateModel(
            name='DyndbOtherCompoundNames',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('other_names', models.CharField(max_length=200)),
            ],
            options={
                'managed': False,
                'db_table': 'dyndb_other_compound_names',
            },
        ),
        migrations.CreateModel(
            name='DyndbOtherProteinNames',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('other_names', models.CharField(max_length=100)),
            ],
            options={
                'managed': False,
                'db_table': 'dyndb_other_protein_names',
            },
        ),
        migrations.CreateModel(
            name='DyndbProtein',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uniprotkbac', models.CharField(blank=True, max_length=10, null=True)),
                ('isoform', models.SmallIntegerField()),
                ('is_mutated', models.BooleanField()),
                ('name', models.CharField(max_length=60)),
                ('update_timestamp', models.DateTimeField()),
                ('creation_timestamp', models.DateTimeField()),
                ('created_by_dbengine', models.CharField(max_length=40)),
                ('last_update_by_dbengine', models.CharField(max_length=40)),
                ('created_by', models.IntegerField(blank=True, null=True)),
                ('last_update_by', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'dyndb_protein',
            },
        ),
        migrations.CreateModel(
            name='DyndbProteinCannonicalProtein',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'managed': False,
                'db_table': 'dyndb_protein_cannonical_protein',
            },
        ),
        migrations.CreateModel(
            name='DyndbProteinMutations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('resid', models.SmallIntegerField()),
                ('resletter_from', models.CharField(max_length=1)),
                ('resletter_to', models.CharField(max_length=1)),
            ],
            options={
                'managed': False,
                'db_table': 'dyndb_protein_mutations',
            },
        ),
        migrations.CreateModel(
            name='DyndbReferences',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('doi', models.CharField(blank=True, max_length=80, null=True, unique=True)),
                ('authors', models.CharField(blank=True, max_length=60, null=True)),
                ('title', models.CharField(blank=True, max_length=100, null=True)),
                ('institution', models.CharField(blank=True, max_length=100, null=True)),
                ('pmid', models.IntegerField(blank=True, null=True, unique=True)),
                ('journal_press', models.CharField(blank=True, max_length=60, null=True)),
                ('issue', models.IntegerField(blank=True, null=True)),
                ('volume', models.IntegerField(blank=True, null=True)),
                ('pages', models.CharField(blank=True, max_length=16, null=True)),
                ('pub_year', models.SmallIntegerField(blank=True, null=True)),
                ('dbname', models.CharField(blank=True, max_length=30, null=True)),
                ('url', models.CharField(blank=True, max_length=100, null=True)),
                ('update_timestamp', models.DateTimeField()),
                ('creation_timestamp', models.DateTimeField()),
                ('created_by_dbengine', models.CharField(max_length=40)),
                ('last_update_by_dbengine', models.CharField(max_length=40)),
                ('created_by', models.IntegerField(blank=True, null=True)),
                ('last_update_by', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'dyndb_references',
            },
        ),
        migrations.CreateModel(
            name='DyndbReferencesCompound',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'managed': False,
                'db_table': 'dyndb_references_compound',
            },
        ),
        migrations.CreateModel(
            name='DyndbReferencesDynamics',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'managed': False,
                'db_table': 'dyndb_references_dynamics',
            },
        ),
        migrations.CreateModel(
            name='DyndbReferencesExpInteractionData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'managed': False,
                'db_table': 'dyndb_references_exp_interaction_data',
            },
        ),
        migrations.CreateModel(
            name='DyndbReferencesExpProteinData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'managed': False,
                'db_table': 'dyndb_references_exp_protein_data',
            },
        ),
        migrations.CreateModel(
            name='DyndbReferencesModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'managed': False,
                'db_table': 'dyndb_references_model',
            },
        ),
        migrations.CreateModel(
            name='DyndbReferencesMolecule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'managed': False,
                'db_table': 'dyndb_references_molecule',
            },
        ),
        migrations.CreateModel(
            name='DyndbReferencesProtein',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'managed': False,
                'db_table': 'dyndb_references_protein',
            },
        ),
        migrations.CreateModel(
            name='DyndbRelatedDynamicsDynamics',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'managed': False,
                'db_table': 'dyndb_related_dynamics_dynamics',
            },
        ),
        migrations.CreateModel(
            name='Gene',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('position', models.SmallIntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'gene',
            },
        ),
        migrations.CreateModel(
            name='GeneProteins',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'managed': False,
                'db_table': 'gene_proteins',
            },
        ),
        migrations.CreateModel(
            name='InteractionProteinLigand',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'managed': False,
                'db_table': 'interaction_protein_ligand',
            },
        ),
        migrations.CreateModel(
            name='InteractionResidueFragment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'managed': False,
                'db_table': 'interaction_residue_fragment',
            },
        ),
        migrations.CreateModel(
            name='InteractionResidueFragmentAtoms',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('atomtype', models.CharField(max_length=20)),
                ('atomnr', models.SmallIntegerField()),
                ('atomclass', models.CharField(max_length=20)),
                ('residuename', models.CharField(max_length=20)),
                ('chain', models.CharField(max_length=20)),
                ('residuenr', models.SmallIntegerField()),
                ('x', models.DecimalField(decimal_places=3, max_digits=6)),
                ('y', models.DecimalField(decimal_places=3, max_digits=6)),
                ('z', models.DecimalField(decimal_places=3, max_digits=6)),
                ('occupancy', models.DecimalField(decimal_places=2, max_digits=6)),
                ('temperature', models.DecimalField(decimal_places=2, max_digits=6)),
                ('element_name', models.CharField(max_length=20)),
            ],
            options={
                'managed': False,
                'db_table': 'interaction_residue_fragment_atoms',
            },
        ),
        migrations.CreateModel(
            name='InteractionStructureLigand',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pdb_reference', models.CharField(blank=True, max_length=3, null=True)),
                ('annotated', models.BooleanField()),
            ],
            options={
                'managed': False,
                'db_table': 'interaction_structure_ligand',
            },
        ),
        migrations.CreateModel(
            name='InteractionTypeResidueFragment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.CharField(max_length=40)),
                ('name', models.CharField(max_length=100)),
                ('type', models.CharField(blank=True, max_length=50, null=True)),
                ('direction', models.CharField(blank=True, max_length=30, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'interaction_type_residue_fragment',
            },
        ),
        migrations.CreateModel(
            name='Ligand',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField()),
                ('canonical', models.BooleanField(null=True)),
                ('ambigious_alias', models.BooleanField(null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'ligand',
            },
        ),
        migrations.CreateModel(
            name='LigandProperities',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('smiles', models.TextField(blank=True, null=True)),
                ('inchikey', models.CharField(blank=True, max_length=50, null=True, unique=True)),
            ],
            options={
                'managed': False,
                'db_table': 'ligand_properities',
            },
        ),
        migrations.CreateModel(
            name='LigandProperitiesWebLinks',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'managed': False,
                'db_table': 'ligand_properities_web_links',
            },
        ),
        migrations.CreateModel(
            name='LigandRole',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.CharField(max_length=50, unique=True)),
                ('name', models.CharField(max_length=100)),
            ],
            options={
                'managed': False,
                'db_table': 'ligand_role',
            },
        ),
        migrations.CreateModel(
            name='LigandType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.CharField(max_length=20, unique=True)),
                ('name', models.CharField(max_length=100)),
            ],
            options={
                'managed': False,
                'db_table': 'ligand_type',
            },
        ),
        migrations.CreateModel(
            name='Mutation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amino_acid', models.CharField(max_length=1)),
            ],
            options={
                'managed': False,
                'db_table': 'mutation',
            },
        ),
        migrations.CreateModel(
            name='MutationExperiment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('wt_value', models.FloatField()),
                ('wt_unit', models.CharField(max_length=10)),
                ('mu_value', models.FloatField()),
                ('mu_sign', models.CharField(max_length=2)),
                ('foldchange', models.FloatField()),
            ],
            options={
                'managed': False,
                'db_table': 'mutation_experiment',
            },
        ),
        migrations.CreateModel(
            name='MutationExperimentalType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=100)),
            ],
            options={
                'managed': False,
                'db_table': 'mutation_experimental_type',
            },
        ),
        migrations.CreateModel(
            name='MutationFunc',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('func', models.CharField(max_length=100)),
            ],
            options={
                'managed': False,
                'db_table': 'mutation_func',
            },
        ),
        migrations.CreateModel(
            name='MutationLigandClass',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('classname', models.CharField(max_length=100)),
            ],
            options={
                'managed': False,
                'db_table': 'mutation_ligand_class',
            },
        ),
        migrations.CreateModel(
            name='MutationLigandReference',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reference', models.CharField(max_length=100)),
            ],
            options={
                'managed': False,
                'db_table': 'mutation_ligand_reference',
            },
        ),
        migrations.CreateModel(
            name='MutationMeasure',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('measure', models.CharField(max_length=100)),
            ],
            options={
                'managed': False,
                'db_table': 'mutation_measure',
            },
        ),
        migrations.CreateModel(
            name='MutationOpt',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=100)),
                ('wt', models.FloatField()),
                ('mu', models.FloatField()),
                ('sign', models.CharField(max_length=2)),
                ('percentage', models.FloatField()),
                ('qual', models.CharField(max_length=100)),
                ('agonist', models.CharField(max_length=100)),
            ],
            options={
                'managed': False,
                'db_table': 'mutation_opt',
            },
        ),
        migrations.CreateModel(
            name='MutationQual',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('qual', models.CharField(max_length=100)),
                ('prop', models.CharField(max_length=100)),
            ],
            options={
                'managed': False,
                'db_table': 'mutation_qual',
            },
        ),
        migrations.CreateModel(
            name='MutationRaw',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reference', models.CharField(max_length=100)),
                ('protein', models.CharField(max_length=100)),
                ('mutation_pos', models.SmallIntegerField()),
                ('mutation_from', models.CharField(max_length=1)),
                ('mutation_to', models.CharField(max_length=1)),
                ('ligand_name', models.CharField(max_length=100)),
                ('ligand_idtype', models.CharField(max_length=100)),
                ('ligand_id', models.CharField(max_length=100)),
                ('ligand_class', models.CharField(max_length=100)),
                ('exp_type', models.CharField(max_length=100)),
                ('exp_func', models.CharField(max_length=100)),
                ('exp_wt_value', models.FloatField()),
                ('exp_wt_unit', models.CharField(max_length=10)),
                ('exp_mu_effect_type', models.CharField(max_length=100)),
                ('exp_mu_effect_sign', models.CharField(max_length=2)),
                ('exp_mu_effect_value', models.FloatField()),
                ('exp_fold_change', models.FloatField()),
                ('exp_mu_effect_qual', models.CharField(max_length=100)),
                ('exp_mu_effect_ligand_prop', models.CharField(max_length=100)),
                ('exp_mu_ligand_ref', models.CharField(max_length=100)),
                ('opt_type', models.CharField(max_length=100)),
                ('opt_wt', models.FloatField()),
                ('opt_mu', models.FloatField()),
                ('opt_sign', models.CharField(max_length=5)),
                ('opt_percentage', models.FloatField()),
                ('opt_qual', models.CharField(max_length=100)),
                ('opt_agonist', models.CharField(max_length=100)),
                ('added_by', models.CharField(max_length=100)),
                ('added_date', models.DateField()),
            ],
            options={
                'managed': False,
                'db_table': 'mutation_raw',
            },
        ),
        migrations.CreateModel(
            name='MutationType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=100)),
            ],
            options={
                'managed': False,
                'db_table': 'mutation_type',
            },
        ),
        migrations.CreateModel(
            name='News',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.TextField()),
                ('date', models.DateField()),
                ('html', models.TextField()),
            ],
            options={
                'managed': False,
                'db_table': 'news',
            },
        ),
        migrations.CreateModel(
            name='Protein',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entry_name', models.CharField(max_length=100, unique=True)),
                ('accession', models.CharField(blank=True, max_length=100, null=True)),
                ('name', models.CharField(max_length=200)),
                ('sequence', models.TextField()),
            ],
            options={
                'managed': False,
                'db_table': 'protein',
            },
        ),
        migrations.CreateModel(
            name='ProteinAlias',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('position', models.SmallIntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'protein_alias',
            },
        ),
        migrations.CreateModel(
            name='ProteinAnomaly',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'managed': False,
                'db_table': 'protein_anomaly',
            },
        ),
        migrations.CreateModel(
            name='ProteinAnomalyRule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amino_acid', models.CharField(max_length=1)),
                ('negative', models.BooleanField()),
            ],
            options={
                'managed': False,
                'db_table': 'protein_anomaly_rule',
            },
        ),
        migrations.CreateModel(
            name='ProteinAnomalyRuleSet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('exclusive', models.BooleanField()),
            ],
            options={
                'managed': False,
                'db_table': 'protein_anomaly_rule_set',
            },
        ),
        migrations.CreateModel(
            name='ProteinAnomalyType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.CharField(max_length=20, unique=True)),
                ('name', models.CharField(max_length=100)),
            ],
            options={
                'managed': False,
                'db_table': 'protein_anomaly_type',
            },
        ),
        migrations.CreateModel(
            name='ProteinConformation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'managed': False,
                'db_table': 'protein_conformation',
            },
        ),
        migrations.CreateModel(
            name='ProteinConformationProteinAnomalies',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'managed': False,
                'db_table': 'protein_conformation_protein_anomalies',
            },
        ),
        migrations.CreateModel(
            name='ProteinConformationTemplateStructure',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'managed': False,
                'db_table': 'protein_conformation_template_structure',
            },
        ),
        migrations.CreateModel(
            name='ProteinEndogenousLigands',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'managed': False,
                'db_table': 'protein_endogenous_ligands',
            },
        ),
        migrations.CreateModel(
            name='ProteinFamily',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.CharField(max_length=100, unique=True)),
                ('name', models.CharField(max_length=200)),
            ],
            options={
                'managed': False,
                'db_table': 'protein_family',
            },
        ),
        migrations.CreateModel(
            name='ProteinFusion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('sequence', models.TextField(blank=True, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'protein_fusion',
            },
        ),
        migrations.CreateModel(
            name='ProteinFusionProtein',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'managed': False,
                'db_table': 'protein_fusion_protein',
            },
        ),
        migrations.CreateModel(
            name='ProteinSegment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.CharField(max_length=100, unique=True)),
                ('name', models.CharField(max_length=50)),
                ('category', models.CharField(max_length=50)),
                ('fully_aligned', models.BooleanField()),
                ('partial', models.BooleanField()),
            ],
            options={
                'managed': False,
                'db_table': 'protein_segment',
            },
        ),
        migrations.CreateModel(
            name='ProteinSequenceType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.CharField(max_length=20, unique=True)),
                ('name', models.CharField(max_length=100)),
            ],
            options={
                'managed': False,
                'db_table': 'protein_sequence_type',
            },
        ),
        migrations.CreateModel(
            name='ProteinSet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
            ],
            options={
                'managed': False,
                'db_table': 'protein_set',
            },
        ),
        migrations.CreateModel(
            name='ProteinSetProteins',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'managed': False,
                'db_table': 'protein_set_proteins',
            },
        ),
        migrations.CreateModel(
            name='ProteinSource',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, unique=True)),
            ],
            options={
                'managed': False,
                'db_table': 'protein_source',
            },
        ),
        migrations.CreateModel(
            name='ProteinState',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.CharField(max_length=20, unique=True)),
                ('name', models.CharField(max_length=100)),
            ],
            options={
                'managed': False,
                'db_table': 'protein_state',
            },
        ),
        migrations.CreateModel(
            name='ProteinWebLinks',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'managed': False,
                'db_table': 'protein_web_links',
            },
        ),
        migrations.CreateModel(
            name='Publication',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField()),
                ('authors', models.TextField()),
                ('year', models.IntegerField()),
                ('reference', models.TextField()),
            ],
            options={
                'managed': False,
                'db_table': 'publication',
            },
        ),
        migrations.CreateModel(
            name='PublicationJournal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.CharField(blank=True, max_length=200, null=True)),
                ('name', models.TextField(unique=True)),
            ],
            options={
                'managed': False,
                'db_table': 'publication_journal',
            },
        ),
        migrations.CreateModel(
            name='ReleaseNotes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('html', models.TextField()),
            ],
            options={
                'managed': False,
                'db_table': 'release_notes',
            },
        ),
        migrations.CreateModel(
            name='ReleaseStatistics',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.IntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'release_statistics',
            },
        ),
        migrations.CreateModel(
            name='ReleaseStatisticsType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
            ],
            options={
                'managed': False,
                'db_table': 'release_statistics_type',
            },
        ),
        migrations.CreateModel(
            name='Residue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sequence_number', models.SmallIntegerField()),
                ('amino_acid', models.CharField(max_length=1)),
            ],
            options={
                'managed': False,
                'db_table': 'residue',
            },
        ),
        migrations.CreateModel(
            name='ResidueAlternativeGenericNumbers',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'managed': False,
                'db_table': 'residue_alternative_generic_numbers',
            },
        ),
        migrations.CreateModel(
            name='ResidueGenericNumber',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=10)),
            ],
            options={
                'managed': False,
                'db_table': 'residue_generic_number',
            },
        ),
        migrations.CreateModel(
            name='ResidueGenericNumberEquivalent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=10)),
            ],
            options={
                'managed': False,
                'db_table': 'residue_generic_number_equivalent',
            },
        ),
        migrations.CreateModel(
            name='ResidueGenericNumberingScheme',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.CharField(max_length=20)),
                ('short_name', models.CharField(max_length=20)),
                ('name', models.CharField(max_length=100)),
            ],
            options={
                'managed': False,
                'db_table': 'residue_generic_numbering_scheme',
            },
        ),
        migrations.CreateModel(
            name='ResidueSet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
            options={
                'managed': False,
                'db_table': 'residue_set',
            },
        ),
        migrations.CreateModel(
            name='ResidueSetResidue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'managed': False,
                'db_table': 'residue_set_residue',
            },
        ),
        migrations.CreateModel(
            name='Species',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('latin_name', models.CharField(max_length=100, unique=True)),
                ('common_name', models.CharField(max_length=100)),
            ],
            options={
                'managed': False,
                'db_table': 'species',
            },
        ),
        migrations.CreateModel(
            name='Structure',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('preferred_chain', models.CharField(max_length=20)),
                ('resolution', models.DecimalField(decimal_places=3, max_digits=5)),
                ('publication_date', models.DateField()),
                ('representative', models.BooleanField()),
            ],
            options={
                'managed': False,
                'db_table': 'structure',
            },
        ),
        migrations.CreateModel(
            name='StructureCoordinates',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'managed': False,
                'db_table': 'structure_coordinates',
            },
        ),
        migrations.CreateModel(
            name='StructureCoordinatesDescription',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=200, unique=True)),
            ],
            options={
                'managed': False,
                'db_table': 'structure_coordinates_description',
            },
        ),
        migrations.CreateModel(
            name='StructureEngineering',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'managed': False,
                'db_table': 'structure_engineering',
            },
        ),
        migrations.CreateModel(
            name='StructureEngineeringDescription',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=200, unique=True)),
            ],
            options={
                'managed': False,
                'db_table': 'structure_engineering_description',
            },
        ),
        migrations.CreateModel(
            name='StructureFragment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'managed': False,
                'db_table': 'structure_fragment',
            },
        ),
        migrations.CreateModel(
            name='StructureModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pdb', models.TextField()),
            ],
            options={
                'managed': False,
                'db_table': 'structure_model',
            },
        ),
        migrations.CreateModel(
            name='StructureModelAnomalies',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reference', models.CharField(max_length=1)),
            ],
            options={
                'managed': False,
                'db_table': 'structure_model_anomalies',
            },
        ),
        migrations.CreateModel(
            name='StructureModelLoopTemplates',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'managed': False,
                'db_table': 'structure_model_loop_templates',
            },
        ),
        migrations.CreateModel(
            name='StructureModelResidues',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sequence_number', models.IntegerField()),
                ('origin', models.CharField(max_length=15)),
            ],
            options={
                'managed': False,
                'db_table': 'structure_model_residues',
            },
        ),
        migrations.CreateModel(
            name='StructurePdbData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pdb', models.TextField()),
            ],
            options={
                'managed': False,
                'db_table': 'structure_pdb_data',
            },
        ),
        migrations.CreateModel(
            name='StructureProteinAnomalies',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'managed': False,
                'db_table': 'structure_protein_anomalies',
            },
        ),
        migrations.CreateModel(
            name='StructureRotamer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'managed': False,
                'db_table': 'structure_rotamer',
            },
        ),
        migrations.CreateModel(
            name='StructureSegment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start', models.IntegerField()),
                ('end', models.IntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'structure_segment',
            },
        ),
        migrations.CreateModel(
            name='StructureSegmentModeling',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start', models.IntegerField()),
                ('end', models.IntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'structure_segment_modeling',
            },
        ),
        migrations.CreateModel(
            name='StructureStabilizingAgent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.CharField(max_length=50, unique=True)),
                ('name', models.CharField(max_length=100)),
            ],
            options={
                'managed': False,
                'db_table': 'structure_stabilizing_agent',
            },
        ),
        migrations.CreateModel(
            name='StructureStabilizingAgents',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'managed': False,
                'db_table': 'structure_stabilizing_agents',
            },
        ),
        migrations.CreateModel(
            name='StructureType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.CharField(max_length=20, unique=True)),
                ('name', models.CharField(max_length=100)),
            ],
            options={
                'managed': False,
                'db_table': 'structure_type',
            },
        ),
        migrations.CreateModel(
            name='WebLink',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('index', models.TextField()),
            ],
            options={
                'managed': False,
                'db_table': 'web_link',
            },
        ),
        migrations.CreateModel(
            name='WebResource',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.CharField(max_length=20)),
                ('name', models.CharField(max_length=200)),
                ('url', models.TextField()),
            ],
            options={
                'managed': False,
                'db_table': 'web_resource',
            },
        ),
        migrations.CreateModel(
            name='Formup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('UNIPROTid', models.CharField(max_length=20)),
                ('iso', models.CharField(max_length=100)),
                ('MUT', models.CharField(max_length=4)),
                ('Nam', models.CharField(max_length=30)),
                ('ORGAN', models.CharField(max_length=200)),
                ('DescMOL', models.TextField()),
                ('NETc', models.IntegerField()),
                ('INCHI', models.TextField()),
                ('inchik', models.CharField(max_length=27)),
                ('SMI', models.TextField()),
                ('resnamMOL', models.CharField(max_length=5)),
                ('numMOL', models.IntegerField()),
                ('MAINprot', models.TextField()),
                ('MAINlig', models.TextField()),
                ('IONresn', models.CharField(max_length=5)),
                ('IONnum', models.IntegerField()),
                ('COMtyp', models.CharField(max_length=50)),
                ('idproT', models.CharField(max_length=50)),
                ('idcoM', models.CharField(max_length=50)),
                ('Msour', models.CharField(max_length=50)),
                ('PDB', models.CharField(max_length=4)),
                ('desc', models.TextField()),
                ('mTEMP', models.TextField()),
                ('METH', models.CharField(max_length=50)),
                ('SOFT', models.CharField(max_length=50)),
                ('SOFTver', models.CharField(max_length=50)),
                ('ffield', models.CharField(max_length=50)),
                ('MEMB', models.CharField(max_length=50)),
                ('Solv', models.CharField(max_length=50)),
                ('PDBcoor', models.CharField(max_length=50)),
                ('PSF', models.CharField(max_length=50)),
                ('topPSF', models.CharField(max_length=50)),
                ('par', models.CharField(max_length=50)),
                ('DCD', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='DyndbBinding',
            fields=[
                ('id', models.ForeignKey(db_column='id', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='dynadb.DyndbExpInteractionData')),
                ('rvalue', models.FloatField()),
                ('units', models.CharField(max_length=10)),
                ('description', models.CharField(blank=True, max_length=60, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'dyndb_binding',
            },
        ),
        migrations.CreateModel(
            name='DyndbCannonicalProteins',
            fields=[
                ('id_protein', models.ForeignKey(db_column='id_protein', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='dynadb.DyndbProtein')),
            ],
            options={
                'managed': False,
                'db_table': 'dyndb_cannonical_proteins',
            },
        ),
        migrations.CreateModel(
            name='DyndbEfficacy',
            fields=[
                ('id', models.ForeignKey(db_column='id', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='dynadb.DyndbExpInteractionData')),
                ('rvalue', models.FloatField()),
                ('units', models.CharField(max_length=10)),
                ('description', models.CharField(max_length=60)),
                ('type', models.TextField()),
            ],
            options={
                'managed': False,
                'db_table': 'dyndb_efficacy',
            },
        ),
        migrations.CreateModel(
            name='DyndbFunctional',
            fields=[
                ('id', models.ForeignKey(db_column='id', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='dynadb.DyndbExpInteractionData')),
                ('description', models.CharField(max_length=60)),
                ('go_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'dyndb_functional',
            },
        ),
        migrations.CreateModel(
            name='DyndbProteinActivity',
            fields=[
                ('id', models.ForeignKey(db_column='id', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='dynadb.DyndbExpProteinData')),
                ('rvalue', models.FloatField()),
                ('units', models.CharField(max_length=10)),
                ('description', models.CharField(max_length=150)),
            ],
            options={
                'managed': False,
                'db_table': 'dyndb_protein_activity',
            },
        ),
        migrations.CreateModel(
            name='DyndbProteinSequence',
            fields=[
                ('id_protein', models.ForeignKey(db_column='id_protein', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='dynadb.DyndbProtein')),
                ('sequence', models.TextField()),
                ('length', models.SmallIntegerField()),
            ],
            options={
                'managed': False,
                'db_table': 'dyndb_protein_sequence',
            },
        ),
        migrations.CreateModel(
            name='DyndbRelatedDynamics',
            fields=[
                ('id_dynamics', models.ForeignKey(db_column='id_dynamics', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='dynadb.DyndbDynamics')),
            ],
            options={
                'managed': False,
                'db_table': 'dyndb_related_dynamics',
            },
        ),
    ]
